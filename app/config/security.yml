# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        Koolawa\AppsBundle\Entity\User:
            algorithm: sha1
            encode_as_base64: false
            iterations: 1
        IMAG\LdapBundle\User\LdapUser: plaintext

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        ROLE_LDAP:        [IS_AUTHENTICATED_ANONYMOUSLY, ROLE_USER]

    providers:
        in_database:
            entity: { class: KoolawaAppsBundle:User }

        in_ldap:
            id: imag_ldap.security.user.provider

        #in_memory:
        #    memory:
        #        users:
        #            user:  { password: userpass, roles: [ 'ROLE_USER' ] }
        #            admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }

        in_multiples:
            chain:
                providers: [in_database, in_ldap]

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        ajax:
            pattern: ^/(ajax|admin/ajax)
            anonymous: true

        main:
            pattern: ^/
            anonymous: true
            context: app
            imag_ldap:
                check_path: /login_check
                login_path: /
                csrf_provider: form.csrf_provider
                intention: authenticate
                provider: in_multiples
            logout:
                path: logout
                target: /
            remember_me:
                key: "%secret%"
                lifetime: 31536000
                path: /
                domain: ~
            
    access_control:
        #- { path: ^/, roles: ROLE_LDAP } #, requires_channel: https }
        #- { path: ^/admin, roles: ROLE_ADMIN, requires_channel: https }
