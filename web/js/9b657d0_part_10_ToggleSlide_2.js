Ext.define("Ext.ux.toggleslide.ToggleSlide",{extend:"Ext.Component",alias:"widget.toggleslide",requires:["Ext.ux.toggleslide.Thumb","Ext.fx.Anim"],duration:120,onText:"ON",offText:"OFF",resizeHandle:true,resizeContainer:true,onLabelCls:"x-toggle-slide-label-on",offLabelCls:"x-toggle-slide-label-off",handleCls:"x-toggle-slide-thumb",disabledCls:"x-toggle-slide-disabled",state:false,booleanMode:true,dragging:false,diff:0,diff2:0,diff3:0,frame:false,renderTpl:['<div class="holder">','<label class="{onLabelCls}">',"<span>{onText}</span>","</label>",'<label class="{offLabelCls}">',"<span>{offText}</span>","</label>","</div>"],autoEl:{tag:"div",cls:"x-toggle-slide-container"},initComponent:function(){var a=this;a.callParent(arguments);a.addEvents("beforechange","change")},beforeRender:function(){var a=this;if(a.state=="true"||a.state=="TRUE"||a.state==1||a.state=="1"||a.state=="on"||a.state=="ON"){a.state=true}else{a.state=false}a.callParent();Ext.applyIf(a.renderData,{offLabelCls:a.offLabelCls,offText:a.offText,onLabelCls:a.onLabelCls,onText:a.onText,handleCls:a.handleCls})},onRender:function(){var b=this;if(!b.resizeContainer){b.diff=0}if(!b.resizeHandle){b.diff2=3;b.diff3=5}b.callParent(arguments);if(b.cls){b.el.addCls(b.cls)}b.thumb=new Ext.ux.toggleslide.Thumb({ownerCt:b,slider:b,disabled:!!b.disabled});var a=b.el.first();b.onLabel=a.first();b.onSpan=b.onLabel.first();b.offLabel=b.onLabel.next();b.offSpan=b.offLabel.first();if(b.rendered){b.thumb.render()}b.handle=b.thumb.el;if(b.resizeHandle){b.thumb.bringToFront()}else{b.thumb.sendToBack()}b.resize();b.disableTextSelection();if(!b.disabled){b.registerToggleListeners()}else{Ext.ux.toggleslide.ToggleSlide.superclass.disable.call(b)}},resize:function(){var f=this,a=f.el,d=f.offLabel,i=f.onLabel,e=f.handle;if(f.resizeHandle){var c=(i.getWidth()<d.getWidth())?i.getWidth():d.getWidth();e.setWidth(c)}if(f.resizeContainer){var h=(i.getWidth()>d.getWidth())?i.getWidth():d.getWidth();var k=Math.ceil(a.getHeight()/3);a.setWidth(h+e.getWidth()+k)}var g=e.getWidth()/2;i.setWidth(a.getWidth()-g+f.diff2);d.setWidth(a.getWidth()-g+f.diff2);var j=f.rightside=a.getWidth()-e.getWidth()-f.diff;if(f.state){e.setLeft(j)}else{e.setLeft(0)}f.onDrag()},disableTextSelection:function(){var a=[this.el,this.onLabel,this.offLabel,this.handle];Ext.each(a,function(b){b.on("mousedown",function(c){c.preventDefault();return false});if(Ext.isIE){b.on("startselect",function(c){c.stopEvent();return false})}})},moveHandle:function(a,e){var c=this,b=new Ext.util.TaskRunner(),d=a?c.rightside:0;Ext.create("Ext.fx.Anim",{target:c.handle,dynamic:true,easing:"easeOut",duration:c.duration,to:{left:d},listeners:{beforeanimate:{fn:function(f){c.task=b.newTask({run:function(){c.onDrag()},interval:10});c.task.start()},scope:this},afteranimate:{fn:function(f){c.onDrag();c.task.destroy()},scope:this}},callback:e})},onDragStart:function(b){var a=this;a.dragging=true;a.dd.constrainTo(a.el,{right:a.diff})},onDragEnd:function(c){var b=this,d=(b.handle.getLeft(true)+b.handle.getRight(true))/2,f=(b.el.getLeft(true)+b.el.getRight(true))/2,a=d>f;(b.state!=a)?b.toggle():b.moveHandle(a);b.dragging=false},onDrag:function(c){var a=this,b=a.handle.getLeft(true)-a.rightside;b=(a.handle.getLeft(true)==a.rightside)?0:b-a.diff3;a.onLabel.setStyle({marginLeft:b+"px"})},onMouseUp:function(){if(!this.dragging){this.toggle()}},toggle:function(){var b=this,a=!this.state;if(!b.booleanMode){a=b.state?b.onText:b.offText}if(b.fireEvent("beforechange",b,a)!==false){b.state=!b.state;b.moveHandle(b.state,Ext.bind(b.fireEvent,b,["change",b,b.getValue()]))}else{b.moveHandle(b.state)}},enable:function(){if(this.disabled){Ext.ux.toggleslide.ToggleSlide.superclass.enable.call(this);this.registerToggleListeners()}return this},disable:function(){if(!this.disabled){Ext.ux.toggleslide.ToggleSlide.superclass.disable.call(this);this.unregisterToggleListeners()}return this},registerToggleListeners:function(){var a=this;a.dd=new Ext.dd.DD(a.handle);a.dd.startDrag=Ext.bind(a.onDragStart,a);a.dd.onDrag=Ext.bind(a.onDrag,a);a.dd.endDrag=Ext.bind(a.onDragEnd,a);a.el.on("mouseup",a.onMouseUp,a)},unregisterToggleListeners:function(){Ext.destroy(this.dd);this.el.un("mouseup",this.onMouseUp,this)},getValue:function(){var a=this;return a.booleanMode?a.state:(a.state?a.onText:a.offText)}});Ext.define("Ext.ux.form.field.ToggleSlide",{extend:"Ext.form.field.Base",alias:"widget.toggleslidefield",requires:["Ext.ux.toggleslide.ToggleSlide"],fieldSubTpl:['<div id="{id}" class="{fieldCls}"></div>',{compiled:true,disableFormats:true}],value:null,initComponent:function(){var c=this,a={id:c.id+"-toggle-slide"},b=null;a=Ext.copyTo(a,c.initialConfig,["onText","offText","resizeHandle","resizeContainer","background","onLabelCls","offLabelCls","handleCls","state","booleanMode"]);if(c.initialConfig.value){a.state=c.initialConfig.value}if(c.initialConfig.booleanMode===false){b=c.initialConfig.state?c.initialConfig.onText||"ON":c.initialConfig.offText||"OFF"}else{b=c.initialConfig.value||c.initialConfig.state||false}c.initialConfig.value=b;c.value=b;c.toggle=new Ext.ux.toggleslide.ToggleSlide(a);c.callParent(arguments)},onRender:function(b,a){var c=this;c.callParent(arguments);c.toggle.render(c.inputEl);c.setRawValue(c.toggle.getValue())},initEvents:function(){var a=this;a.callParent();a.toggle.on("change",a.onToggleChange,a)},onToggleChange:function(a,b){return this.setValue(b)},setValue:function(c){var b=this,a=b.toggle;if(c===b.value||c===undefined){return}b.callParent(arguments);if(a.getValue()!=c){a.toggle()}return b},onChange:function(a,b){},onEnable:function(){Ext.ux.form.field.ToggleSlide.superclass.onEnable.call(this);this.toggle.enable()},onDisable:function(){Ext.ux.form.field.ToggleSlide.superclass.onDisable.call(this);this.toggle.disable()},beforeDestroy:function(){Ext.destroy(this.toggle);this.callParent()}});